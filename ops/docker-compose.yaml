
services:
  app:
    build:
      context: ../
      dockerfile: ./ops/Dockerfile
    command: uv run gunicorn hero_api.wsgi:application
    depends_on:
      migrations:
        condition: service_completed_successfully
      db:
        condition: service_healthy

    env_file:
      - ../.env
    restart: always
    ports: 
      - '8000:8000'
  
  db:
    image: postgres:14.5-alpine
    env_file:
      - ../.env
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data:rw
    command: ["postgres", "-c", "log_statement=all", "-c", "log_duration=true"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s 

  migrations:
    build:
      context: ../
      dockerfile: ./ops/Dockerfile
    env_file:
      - ../.env
    command: uv run python manage.py migrate
    depends_on:
      db:
        condition: service_healthy
    


volumes:
  db: {}